<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
  	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
  	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
  	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:annotation-config />
    <aop:aspectj-autoproxy/>

    <bean id="serviceProperties" class="com.cedarsoftware.service.ServiceProperties">
        <property name="NCUBE_MUTABLE" value="#{systemEnvironment['NCUBE_MUTABLE'] ?: systemProperties['NCUBE_MUTABLE'] ?: false}"/>
        <property name="NCUBE_PROTOCOL" value="#{systemEnvironment['NCUBE_PROTOCOL'] ?: systemProperties['NCUBE_PROTOCOL'] ?: 'https'}"/>
        <property name="NCUBE_HOST" value="#{systemEnvironment['NCUBE_HOST'] ?: systemProperties['NCUBE_HOST'] ?: ''}"/>
        <property name="NCUBE_PORT" value="#{systemEnvironment['NCUBE_PORT'] ?: systemProperties['NCUBE_PORT'] ?: 443}"/>
        <property name="NCUBE_CONTEXT" value="#{systemEnvironment['NCUBE_CONTEXT'] ?: systemProperties['NCUBE_CONTEXT'] ?: ''}"/>
        <property name="NCUBE_USERNAME" value="#{systemEnvironment['NCUBE_USERNAME'] ?: systemProperties['NCUBE_USERNAME'] ?: ''}"/>
        <property name="NCUBE_PASSWORD" value="#{systemEnvironment['NCUBE_PASSWORD'] ?: systemProperties['NCUBE_PASSWORD'] ?: ''}"/>
        <property name="NCUBE_JDBC_DRIVER" value="#{systemEnvironment['NCUBE_JDBC_DRIVER'] ?: systemProperties['NCUBE_JDBC_DRIVER'] ?: 'oracle.jdbc.driver.OracleDriver'}"/>
        <property name="NCUBE_JDBC_URL" value="#{systemEnvironment['NCUBE_JDBC_URL'] ?: systemProperties['NCUBE_JDBC_URL'] ?: 'jdbc:oracle:thin:@dm01np-scan.td.afg:1521/app_ncubed.dev.gai.com'}"/>
        <property name="NCUBE_JDBC_USER" value="#{systemEnvironment['NCUBE_JDBC_USER'] ?: systemProperties['NCUBE_JDBC_USER'] ?: 'nce'}"/>
        <property name="NCUBE_JDBC_PWD" value="#{systemEnvironment['NCUBE_JDBC_PWD'] ?: systemProperties['NCUBE_JDBC_PWD'] ?: 'quality'}"/>
        <property name="NCUBE_POOL_QUERY" value="#{systemEnvironment['NCUBE_POOL_QUERY'] ?: systemProperties['NCUBE_POOL_QUERY'] ?: 'select 1 from dual'}"/>
    </bean>

    <beans profile="runtime">

        <bean id="ncubeRuntime" class="com.cedarsoftware.ncube.NCubeRuntime">
            <constructor-arg ref="jsonHttpProxy" />
            <constructor-arg ref="cacheManager" />
            <constructor-arg ref="adviceManager" />
            <constructor-arg value="#{serviceProperties.NCUBE_MUTABLE}" />
        </bean>

        <bean id="jsonHttpProxy" class="com.cedarsoftware.util.JsonHttpProxy">
            <constructor-arg value="#{serviceProperties.NCUBE_PROTOCOL}" />
            <constructor-arg value="#{serviceProperties.NCUBE_HOST}" />
            <constructor-arg value="#{serviceProperties.NCUBE_PORT}" />
            <constructor-arg value="#{serviceProperties.NCUBE_CONTEXT}" />
            <constructor-arg value="#{serviceProperties.NCUBE_USERNAME}" />
            <constructor-arg value="#{serviceProperties.NCUBE_PASSWORD}" />
        </bean>

        <bean id="cacheManager" class="com.cedarsoftware.ncube.NCubeCacheManager" />

        <bean id="adviceManager" class="com.cedarsoftware.ncube.NCubeCacheManager" />

    </beans>

    <beans profile="server">

        <bean name="ncubeControllerAdvice" class="com.cedarsoftware.controller.NCubeControllerAdvice">
            <constructor-arg ref="ncubeController" />
        </bean>

        <bean name="ncubeController" class="com.cedarsoftware.controller.NCubeController">
            <constructor-arg ref="ncubeService" />
        </bean>

        <bean name="ncubeService" class="com.cedarsoftware.service.ncube.NCubeService">
            <constructor-arg ref="ncubeRuntime" />
        </bean>

        <bean id="ncubeRuntime" class="com.cedarsoftware.ncube.NCubeManagerImpl">
            <constructor-arg ref="reflectiveProxy" />
            <constructor-arg ref="noOpCacheManager" />
            <constructor-arg ref="noOpAdviceManager" />
            <constructor-arg ref="persister" />
        </bean>

        <bean id="reflectiveProxy" class="com.cedarsoftware.util.ReflectiveProxy" />

        <bean id="noOpCacheManager" class="org.springframework.cache.support.NoOpCacheManager" />

        <bean id="noOpAdviceManager" class="org.springframework.cache.support.NoOpCacheManager" />

        <bean id="persister" class="com.cedarsoftware.ncube.NCubeJdbcPersisterAdapter">
            <constructor-arg ref="connectionProvider" />
        </bean>

        <bean id="connectionProvider" class="com.cedarsoftware.util.SpringConnectionProvider">
            <constructor-arg ref="ncubeDataSource" />
        </bean>

        <bean id="ncubeTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
            <property name="dataSource" ref="ncubeDataSource" />
        </bean>

        <tx:advice id="ncubeTxAdvice" transaction-manager="ncubeTransactionManager">
            <tx:attributes>
                <tx:method name="get*" propagation="REQUIRED" read-only="true"/>
                <tx:method name="is*" propagation="REQUIRED" read-only="true"/>
                <tx:method name="has*" propagation="REQUIRED" read-only="true"/>
                <tx:method name="does*" propagation="REQUIRED" read-only="true"/>
                <tx:method name="search*" propagation="REQUIRED" read-only="true"/>
                <tx:method name="load*" propagation="REQUIRED" read-only="true"/>
                <tx:method name="resolveRelativeUrl" propagation="REQUIRED" read-only="true"/>
                <tx:method name="assert*" propagation="REQUIRED" read-only="true"/>
                <tx:method name="check*" propagation="REQUIRED" read-only="true"/>
                <tx:method name="*" propagation="REQUIRED"/>
            </tx:attributes>
        </tx:advice>

        <aop:config>

            <aop:pointcut id="ncubeServiceMethods" expression="execution(* com.cedarsoftware.service.ncube.NCubeService.*(..))"/>
            <aop:advisor advice-ref="ncubeTxAdvice" pointcut-ref="ncubeServiceMethods"/>

        </aop:config>

        <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
            <property name="staticMethod" value="com.cedarsoftware.ncube.NCubeManager.setNCubePersister"/>
            <property name="arguments">
                <list>
                    <ref bean="persister"/>
                </list>
            </property>
        </bean>

        <!--
            Set NCE_JDBC_DRIVER, NCE_JDBC_URL, NCE_JDBC_USER, NCE_JDBC_PWD, and NCE_POOL_QUERY as environment
            variables or system properties.
        -->

        <bean id="ncubeDataSource" destroy-method="close" class="org.apache.tomcat.jdbc.pool.DataSource"
              p:driverClassName="#{serviceProperties.NCUBE_JDBC_DRIVER}"
              p:url="#{serviceProperties.NCUBE_JDBC_URL}"
              p:username="#{serviceProperties.NCUBE_JDBC_USER}"
              p:password="#{serviceProperties.NCUBE_JDBC_PWD}"
              p:jdbcInterceptors="com.cedarsoftware.util.PoolInterceptor"
              p:initialSize="5"
              p:minIdle="5"
              p:maxIdle="10"
              p:maxActive="100"
              p:maxWait="120000"
              p:jmxEnabled="true"
              p:removeAbandoned="true"
              p:removeAbandonedTimeout="180"
              p:testOnBorrow="true"
              p:testOnReturn="false"
              p:testWhileIdle="false"
              p:timeBetweenEvictionRunsMillis="30000"
              p:minEvictableIdleTimeMillis="30000"
              p:validationInterval="60000"
              p:validationQuery="#{serviceProperties.NCUBE_POOL_QUERY}">
        </bean>

    </beans>

    <!--TODO-->
    <beans profile="combined">

    </beans>

</beans>